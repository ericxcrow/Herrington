const { MessageEmbed, Permissions, MessageButton, MessageActionRow } = require("discord.js");
const Guilds = require('../../schemas/Guilds')

module.exports = {
    name: "user",
    description: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.",

    async run (bot, message, args) {
      let guilds = await Guilds.findOne({ guild_id: message.guild.id })

      const user = message.mentions.users.first();
      let id = user?.id ?? args[0] ?? message.author.id
      let fetched_user = await bot.users.fetch(id, { force: true })
      let fetched_member = await message.guild.members.fetch(id).catch(() => null)
      const avatarUrl = await fetched_user.avatarURL({ dynamic: true, size: 1024} );
      const bannerUrl = await fetched_user.bannerURL({ dynamic: true, size: 4096 });

      let embed = new MessageEmbed()
        .setColor(guilds.color)

      if (args[1]){
        embed.setDescription(`–û—à–∏–±–∫–∞! –í—ã —É–∫–∞–∑–∞–ª–∏ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.`);
        return message.reply({ embeds: [embed] })
      }

      let userinfo = [
          `${fetched_user.bot ? '**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:**' : '**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:**'}`,
          `**‚úÆ** ${fetched_user.bot ? '–ò–º—è –±–æ—Ç–∞' : '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}: **\`${fetched_user.username}#${fetched_user.discriminator}\`**`,
          `**‚úÆ** ID: **\`${fetched_user.id}\`**`,
          `**‚úÆ** –ü—Ä–æ—Ñ–∏–ª—å: **${fetched_user}** [**\`--> –°—Å—ã–ª–∫–∞ <--\`**](https://discordapp.com/users/${fetched_user.id})`,
          `**‚úÆ** –ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω: <t:${~~(fetched_user.createdTimestamp/1000)}:F>`,
      ].map((x) => x).join(`\n`)

      if(!fetched_member){
        embed.setDescription(`${userinfo}`)
        embed.setImage(bannerUrl)
        embed.setThumbnail(avatarUrl)

        return message.reply({ embeds: [embed] });
      }

      let server_user_info = [
          `**–°–µ—Ä–≤–µ—Ä–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**`,
          `**‚úÆ** –°–µ—Ä–≤–µ—Ä–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º: **\`${fetched_member.nickname ? fetched_member.nickname : "–ù–∏–∫–Ω–µ–π–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}\`**`,
          `**‚úÆ** –ó–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä: <t:${~~(fetched_member.joinedTimestamp/1000)}:F>`,
      ].map((x) => x).join(`\n`)

      let userRoles = fetched_member.roles.cache.sort((a, b) => b.position - a.position).map((x) => x).filter((z) => z.name !== "@everyone").join(`\n`);

      let user_roles = [
          `**–†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:**`,
          `${userRoles}`
      ].map((x) => x).join(`\n`)

      let color = fetched_member.displayHexColor;
      try {
        if (color == '#000000') color = (fetched_user.hoistRole.hexColor);
        } catch (error) {
            color = `#2f3136`
        }

          if (userRoles.length > 3000) {
              userRoles = "ü•¥ –Ø —Å—Ç–æ–ª—å–∫–æ —Å—á–∏—Ç–∞—Ç—å –Ω–µ —É–º–µ—é....–∏—Ö —Ç–∞–∫ –º–Ω–æ–≥–æ...–≥–æ–ª–æ–≤–∞ –∫—Ä—É–∂–∏—Ç—Å—è...";
          }

          let bust = fetched_member.premiumSince
          if (!fetched_member.premiumSince) bust = "–°–µ–π—á–∞—Å –Ω–µ –±—É—Å—Ç–∏—Ç —Å–µ—Ä–≤–µ—Ä"
          if (fetched_member.premiumSince) bust = "–Ø–≤–ª—è–µ—Ç—Å—è –±—É—Å—Ç–µ—Ä–æ–º —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç"

          let memberStatm;
          let memberStat = fetched_member.presence?.status;
          if (memberStat === "online") memberStatm = `–û–Ω–ª–∞–π–Ω üü¢`;
          if (memberStat === "offline") memberStatm = `–û—Ñ–ª–∞–π–Ω ‚ö´Ô∏è`;
          if (memberStat === "idle") memberStatm = `–û—Ç–æ—à—ë–ª üåô`;
          if (memberStat === "dnd") memberStatm = `–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å ‚õî`;
          if (!memberStat) memberStatm = `–û—Ñ–ª–∞–π–Ω ‚ö´Ô∏è`;

          let status_pc = `\`–ù–µ –≤ —Å–µ—Ç–∏\``;
          let status_web = `\`–ù–µ –≤ —Å–µ—Ç–∏\``;
          let status_mobile = `\`–ù–µ –≤ —Å–µ—Ç–∏\``;

          let client_status = fetched_member.presence?.clientStatus
          if (client_status) {
            let client_status_pc = client_status.desktop
            let client_status_web = client_status.web
            let client_status_mobile = client_status.mobile

            if (client_status_pc) status_pc = `üñ•Ô∏è`
            if (client_status_web) status_web = `üì°`
            if (client_status_mobile) status_mobile = `üì±`
          }
          if (!client_status) {
            status_pc = `\`–ù–µ –≤ —Å–µ—Ç–∏\``;
            status_web = `\`–ù–µ –≤ —Å–µ—Ç–∏\``;
            status_mobile = `\`–ù–µ –≤ —Å–µ—Ç–∏\``;
          }

          let user_status = [
            `**–°—Ç–∞—Ç—É—Å—ã:**`,
            `**‚úÆ** ${memberStatm}`,
            ` `,
            `**‚úÆ** –ü–ö –∫–ª–∏–µ–Ω—Ç: ${status_pc}`,
            `**‚úÆ** –í–ï–ë –ö–ª–∏–µ–Ω—Ç: ${status_web}`,
            `**‚úÆ** –ú–û–ë–∏–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç: ${status_mobile}`
          ].map((x) => x).join(`\n`)

          let user_bust = [
            `**–ë—É—Å—Ç —Å–µ—Ä–≤–µ—Ä–∞:**`,
            `**‚úÆ** ${bust}`
          ].map((x) => x).join(`\n`)

          embed.setColor(color)
          embed.setDescription(`${userinfo}\n\n${server_user_info}\n\n${user_roles}\n\n${user_status}\n\n${user_bust}`)
          embed.setImage(bannerUrl)
          embed.setThumbnail(avatarUrl)

          await message.reply({ embeds: [embed] });

    }
}
